plugins {
    id 'java'
    //id "de.jjohannes.extra-java-module-info" version "0.1"
}

group 'tk.smileyik'
version '1.7.3'
archivesBaseName = 'LuaInMinecraftBukkit'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url = "https://papermc.io/repo/repository/maven-public/"
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    mavenCentral()
}

dependencies {
    implementation 'org.luaj:luaj-jse:3.0.1'
    implementation 'org.spigotmc:spigot-api:1.16.2-R0.1-SNAPSHOT'
    implementation 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

//extraJavaModuleInfo {
//    // This does not have to be a complete description (e.g. here 'org.apache.commons.collections' does not export anything here).
//    // It only needs to be good enough to work in the context of this application we are building.
//    module('luaj-jse-3.0.1.jar','org.luaj','3.0.1') {
//        exports "org.luaj.vm2"
//        exports "org.luaj.vm2.lib.jse"
//    }
//    automaticModule("commons-lang-2.6.jar", "org.apache.commons.lang")
//    automaticModule("bungeecord-chat-1.16-R0.3.jar", "bungeecord-chat")
//    automaticModule("guava-21.0.jar", "guava")
//    automaticModule("gson-2.8.0.jar", "gson")
//}

test {
    useJUnitPlatform()
}

// 删除plugins文件夹中以前构建的文件.
task deleteOldBuilds(type: Delete) {
    for (final def f in file("${projectDir}/server/plugins/").listFiles()) {
        if (f.isFile() && f.getName().startsWith("${archivesBaseName}")) {
            printf("Remove old build: %s\n", f.toString())
            delete f
        }
    }
}

// 复制当前版本到plugins文件夹中z
task copyTask(type: Copy) {
    dependsOn(build)
    dependsOn(deleteOldBuilds)
    from "${buildDir}/libs/${archivesBaseName}-${version}.jar"
    into "${projectDir}/server/plugins/"
}
